<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${package}.${dao}.${prefix}.${name}Mapper">

    <resultMap id="BaseResultMap" type="${package}.${entity}.${prefix}.${name}">
        #foreach($column in $columns)
            #if(${column.pk})
                <id property="${column.javaFieldName}" column="${column.columnName}" jdbcType="${column.jdbcType}"/>
            #else
                <result property="${column.javaFieldName}" column="${column.columnName}" jdbcType="${column.jdbcType}"/>
            #end
        #end
    </resultMap>

    <sql id="Base_Column_List">
        #foreach($column in $columns)##
${column.columnName}#if($foreach.hasNext),#end##
#end

    </sql>
#if(${isMerge})##
    <update id="batchMerge">
        MERGE ${table} AS t
        USING  ( select * from (
        <foreach collection="list" item="item" index="index" separator="union all">
            select
            #foreach($column in $columns)##
                #{item.${column.javaFieldName}} as ${column.columnName} #if($foreach.hasNext),
            #end##
            #end
        </foreach> ) temp ) as s
        ON t.id = s.id
        WHEN MATCHED THEN
            UPDATE SET
##            #foreach($column in $columns)#if(!${column.pk})t.${column.columnName} = isnull(s.${column.columnName},t.${column.columnName})#if($foreach.hasNext),
        #foreach($column in $columns)#if(!${column.pk})t.${column.columnName} = s.${column.columnName}#if($foreach.hasNext),
#end#end#end##

        WHEN NOT MATCHED THEN
            INSERT (#foreach($column in $columns)#if(!${column.pk})${column.columnName}#if($foreach.hasNext) ,#end#end#end)
            VALUES (#foreach($column in $columns)#if(!${column.pk})##
#if(${column.defaultVal})##
isnull(s.${column.columnName},${column.defaultVal})##
#else ##
s.${column.columnName}##
#end#if($foreach.hasNext) ,#end#end#end);
    </update>

#end##


#if(${buildSelect})##
    <select id="select" resultType="map">
        select #foreach($column in $columns)##
        #if($column.enumMap.size()>0)
            case
            #foreach($param in ${column.enumMap.entrySet()})
                when $t.${column.columnName} = ${param.key} then N'${param.value}'
            #end
            end as ${column.javaFieldName}Str ,
        #end
        ${column.selectSql}#if($foreach.hasNext),
        #end#end

        FROM ${table} $t with (nolock)
        where 1=1
        <if test="ew.sqlSegment != null and ew.sqlSegment != ''">
            and ${ew.sqlSegment}
        </if>
    </select>
#end##

</mapper>
