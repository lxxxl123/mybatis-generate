package ${package}.${controller}.${prefix};

import ${package}.controller.base.BaseController;
import ${package}.${dao}.${prefix}.${name}Mapper;
import com.haday.qms.core.tool.api.R;
import ${package}.${entity}.${prefix}.${name};
import com.haday.qms.interceptor.anno.Auth;
import ${package}.vo.SearchVo;
import ${package}.${service}.${prefix}.${serviceImpl}.${name}ServiceImpl;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.apache.shiro.authz.annotation.RequiresPermissions;
#if(${buildSelect})##
import com.alibaba.fastjson.JSONObject;
#end

import java.util.List;

/**
* @author ${author}
*/
#set($path="${name.substring(0, 1).toLowerCase()}${name.substring(1)}")
@RestController
@RequestMapping("/$path")
@Api(value = "${tableInfo.desc}控制器", tags = "${tableInfo.desc}控制器")
public class ${name}Controller extends BaseController<${name}ServiceImpl, ${name}Mapper, ${name}> {


    @Override
    @ApiOperation(value = "批量保存", notes = "批量保存")
    @PostMapping("/batchAdd")
    @Auth
    @RequiresPermissions("qms:$path:update")
    public R<?> batchAdd(@RequestBody List<${name}> list) {
        return super.batchAdd(list);
    }

    @Override
    @ApiOperation(value = "更新", notes = "更新")
    @PostMapping("/update")
    @Auth
    @RequiresPermissions("qms:$path:update")
    public R<?> update(@RequestBody ${name} obj) {
        return super.update(obj);
    }

#if($isMerge)##
    @ApiOperation(value = "合并", notes = "合并")
    @PostMapping("/merge")
    @Auth
    @RequiresPermissions("qms:$path:update")
    public R<?> merge(@RequestBody List<${name}> list) {
        return R.data(service.merge(list));
    }##

#end

#if(${buildSelect})##
    @ApiOperation(value = "查询", notes = "查询")
    @PostMapping("/search")
    @Auth
    @RequiresPermissions("qms:$path:read")
    public R<?> search(@RequestBody JSONObject obj) {
        return R.data(service.search(obj));
    }
#else##
    @Override
    @ApiOperation(value = "查询", notes = "查询")
    @PostMapping("/search")
    @Auth
    @RequiresPermissions("qms:$path:read")
    public R<?> search(@RequestBody @Validated SearchVo obj) {
        return super.search(obj);
    }
#end



    @Override
    @ApiOperation(value = "批量删除", notes = "批量删除")
    @PostMapping("/batchDelete")
    @Auth
    @RequiresPermissions("qms:$path:delete")
    public R<?> batchDelete(@RequestBody List<String> id) {
        return super.batchDelete(id);
    }
}
